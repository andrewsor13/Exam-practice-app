{"ast":null,"code":"var _jsxFileName = \"/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport styles from \"./QuestionDetails.module.css\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails() {\n  _s();\n  const [checkedAnswers, setCheckedAnswers] = useState({});\n  const [counter, setCounter] = useState(0);\n  const {\n    year,\n    type\n  } = useParams();\n  const filteredYear = data.find(yearData => yearData.year === year);\n  const filteredType = filteredYear ? filteredYear.data.find(typeData => typeData.type === type) : null;\n  const questions = filteredType ? filteredType.data : [];\n  const onChange = (questionId, answerIndex, isCorrect, checked) => {\n    setCheckedAnswers(prevCheckedAnswers => {\n      const newCheckedAnswers = {\n        ...prevCheckedAnswers\n      };\n      if (!newCheckedAnswers[questionId]) {\n        newCheckedAnswers[questionId] = {};\n      }\n      newCheckedAnswers[questionId][answerIndex] = checked ? isCorrect : null;\n      return newCheckedAnswers;\n    });\n  };\n  useEffect(() => {\n    let newCounter = 0;\n    Object.values(checkedAnswers).forEach(answers => {\n      Object.values(answers).forEach(isCorrect => {\n        if (isCorrect === true) {\n          newCounter++;\n        } else if (isCorrect === false) {\n          newCounter--;\n        }\n      });\n    });\n    setCounter(newCounter);\n  }, [checkedAnswers]);\n  useEffect(() => {\n    console.log(counter);\n    if (counter === 3) {\n      Notify.success(\"Te descurci minunat!\");\n    } else if (counter === -3) {\n      Notify.warning(\"Incearca sa te concentrezi!\");\n    }\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: questions.map(question => {\n      const answers = question.answers;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.question,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          type: \"A\",\n          className: styles.answersList,\n          children: answers.map((answer, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.answersListItem,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => onChange(question.id, key, answer.isCorrect, e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: checkedAnswers[question.id] && checkedAnswers[question.id][key] !== undefined ? checkedAnswers[question.id][key] === true ? styles.correct : checkedAnswers[question.id][key] === false ? `${styles.wrong} ${styles.shake}` : \"\" : \"\",\n                children: answer.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetails, \"Qe48RKXi68fZMIootYBYjsxnzjc=\", false, function () {\n  return [useParams];\n});\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","data","styles","Notify","jsxDEV","_jsxDEV","QuestionDetails","_s","checkedAnswers","setCheckedAnswers","counter","setCounter","year","type","filteredYear","find","yearData","filteredType","typeData","questions","onChange","questionId","answerIndex","isCorrect","checked","prevCheckedAnswers","newCheckedAnswers","newCounter","Object","values","forEach","answers","console","log","success","warning","children","map","question","className","fileName","_jsxFileName","lineNumber","columnNumber","answersList","answer","key","answersListItem","e","id","target","undefined","correct","wrong","shake","_c","$RefreshReg$"],"sources":["/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport styles from \"./QuestionDetails.module.css\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nexport default function QuestionDetails() {\n  const [checkedAnswers, setCheckedAnswers] = useState({});\n  const [counter, setCounter] = useState(0);\n  const { year, type } = useParams();\n  const filteredYear = data.find((yearData) => yearData.year === year);\n  const filteredType = filteredYear\n    ? filteredYear.data.find((typeData) => typeData.type === type)\n    : null;\n  const questions = filteredType ? filteredType.data : [];\n\n  const onChange = (questionId, answerIndex, isCorrect, checked) => {\n    setCheckedAnswers((prevCheckedAnswers) => {\n      const newCheckedAnswers = { ...prevCheckedAnswers };\n      if (!newCheckedAnswers[questionId]) {\n        newCheckedAnswers[questionId] = {};\n      }\n      newCheckedAnswers[questionId][answerIndex] = checked ? isCorrect : null;\n      return newCheckedAnswers;\n    });\n  };\n\n  useEffect(() => {\n    let newCounter = 0;\n    Object.values(checkedAnswers).forEach((answers) => {\n      Object.values(answers).forEach((isCorrect) => {\n        if (isCorrect === true) {\n          newCounter++;\n        } else if (isCorrect === false) {\n          newCounter--;\n        }\n      });\n    });\n    setCounter(newCounter);\n  }, [checkedAnswers]);\n\n  useEffect(() => {\n    console.log(counter);\n    if (counter === 3) {\n      Notify.success(\"Te descurci minunat!\");\n    } else if (counter === -3) {\n      Notify.warning(\"Incearca sa te concentrezi!\");\n    }\n  }, [counter]);\n\n  return (\n    <ol>\n      {questions.map((question) => {\n        const answers = question.answers;\n        return (\n          <li key={question.id}>\n            <h3 className={styles.question}>{question.question}</h3>\n            <ol type=\"A\" className={styles.answersList}>\n              {answers.map((answer, key) => (\n                <li key={key}>\n                  <label className={styles.answersListItem}>\n                    <input\n                      type=\"checkbox\"\n                      onChange={(e) =>\n                        onChange(\n                          question.id,\n                          key,\n                          answer.isCorrect,\n                          e.target.checked\n                        )\n                      }\n                    />\n                    <p\n                      className={\n                        checkedAnswers[question.id] &&\n                        checkedAnswers[question.id][key] !== undefined\n                          ? checkedAnswers[question.id][key] === true\n                            ? styles.correct\n                            : checkedAnswers[question.id][key] === false\n                            ? `${styles.wrong} ${styles.shake}`\n                            : \"\"\n                          : \"\"\n                      }\n                    >\n                      {answer.answer}\n                    </p>\n                  </label>\n                </li>\n              ))}\n            </ol>\n          </li>\n        );\n      })}\n    </ol>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}