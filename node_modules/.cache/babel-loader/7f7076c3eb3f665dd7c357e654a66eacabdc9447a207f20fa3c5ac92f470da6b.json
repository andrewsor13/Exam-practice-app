{"ast":null,"code":"var _jsxFileName = \"/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionType.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport questionsData from \"../../db/db.json\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport styles from \"./QuestionType.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionType() {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const {\n    year,\n    type\n  } = useParams();\n  const filteredYearData = questionsData.find(yearData => yearData.year === year);\n  const questionsType = filteredYearData ? filteredYearData.data : [];\n  useEffect(() => {\n    if (questionsType.type === type) {\n      setIsActive(true);\n    } else setIsActive(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.typeList,\n      children: questionsType === null || questionsType === void 0 ? void 0 : questionsType.map((questionType, key) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.listItem,\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `${questionType.type}`,\n            className: () => isActive ? `${styles.active}` : \"\",\n            children: questionType.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionType, \"0d7H9BqZN7v21mtDZpvFKaXEMMQ=\", false, function () {\n  return [useParams];\n});\n_c = QuestionType;\nvar _c;\n$RefreshReg$(_c, \"QuestionType\");","map":{"version":3,"names":["React","useEffect","useState","questionsData","Outlet","useParams","styles","NavLink","jsxDEV","_jsxDEV","QuestionType","_s","isActive","setIsActive","year","type","filteredYearData","find","yearData","questionsType","data","children","className","typeList","map","questionType","key","listItem","to","active","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionType.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport questionsData from \"../../db/db.json\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport styles from \"./QuestionType.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function QuestionType() {\n  const [isActive, setIsActive] = useState(false);\n\n  const { year, type } = useParams();\n  const filteredYearData = questionsData.find(\n    (yearData) => yearData.year === year\n  );\n  const questionsType = filteredYearData ? filteredYearData.data : [];\n\n  useEffect(() => {\n    if (questionsType.type === type) {\n      setIsActive(true);\n    } else setIsActive(false);\n  }, []);\n  return (\n    <div>\n      <ul className={styles.typeList}>\n        {questionsType?.map((questionType, key) => {\n          return (\n            <li className={styles.listItem} key={key}>\n              <NavLink\n                to={`${questionType.type}`}\n                className={() => (isActive ? `${styles.active}` : \"\")}\n              >\n                {questionType.type}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AACpD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM;IAAEY,IAAI;IAAEC;EAAK,CAAC,GAAGV,SAAS,CAAC,CAAC;EAClC,MAAMW,gBAAgB,GAAGb,aAAa,CAACc,IAAI,CACxCC,QAAQ,IAAKA,QAAQ,CAACJ,IAAI,KAAKA,IAClC,CAAC;EACD,MAAMK,aAAa,GAAGH,gBAAgB,GAAGA,gBAAgB,CAACI,IAAI,GAAG,EAAE;EAEnEnB,SAAS,CAAC,MAAM;IACd,IAAIkB,aAAa,CAACJ,IAAI,KAAKA,IAAI,EAAE;MAC/BF,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAMA,WAAW,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EACN,oBACEJ,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAIa,SAAS,EAAEhB,MAAM,CAACiB,QAAS;MAAAF,QAAA,EAC5BF,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,GAAG,CAAC,CAACC,YAAY,EAAEC,GAAG,KAAK;QACzC,oBACEjB,OAAA;UAAIa,SAAS,EAAEhB,MAAM,CAACqB,QAAS;UAAAN,QAAA,eAC7BZ,OAAA,CAACF,OAAO;YACNqB,EAAE,EAAE,GAAGH,YAAY,CAACV,IAAI,EAAG;YAC3BO,SAAS,EAAEA,CAAA,KAAOV,QAAQ,GAAG,GAAGN,MAAM,CAACuB,MAAM,EAAE,GAAG,EAAI;YAAAR,QAAA,EAErDI,YAAY,CAACV;UAAI;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX;QAAC,GANyBP,GAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOpC,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLxB,OAAA,CAACL,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACtB,EAAA,CAjCuBD,YAAY;EAAA,QAGXL,SAAS;AAAA;AAAA6B,EAAA,GAHVxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}