{"ast":null,"code":"var _jsxFileName = \"/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport styles from \"./QuestionDetails.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails() {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const {\n    year,\n    type\n  } = useParams();\n  const filteredYear = data.find(yearData => yearData.year === year);\n  const filteredType = filteredYear ? filteredYear.data.find(typeData => typeData.type === type) : null;\n  const questions = filteredType ? filteredType.data : [];\n  const handleChange = (questionId, answerKey) => {\n    setChecked(prevState => ({\n      ...prevState,\n      [questionId]: answerKey\n    }));\n  };\n  const checkAnswer = question => {\n    const selectedAnswer = checked[question.id];\n    return selectedAnswer === question.correctAnswer;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), question.answers.map((answerObj, index) => {\n          const key = Object.keys(answerObj)[0];\n          const value = answerObj[key];\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: checked[question.id] === key,\n              onChange: () => handleChange(question.id, key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), value]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: checked[question.id] && (checkAnswer(question) ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            children: \"R\\u0103spuns corect!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"R\\u0103spuns gre\\u0219it!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetails, \"PJYS/vzQjXhr6KrtlLBr+Z1yX30=\", false, function () {\n  return [useParams];\n});\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useState","useParams","data","styles","jsxDEV","_jsxDEV","QuestionDetails","_s","checked","setChecked","year","type","filteredYear","find","yearData","filteredType","typeData","questions","handleChange","questionId","answerKey","prevState","checkAnswer","question","selectedAnswer","id","correctAnswer","children","map","fileName","_jsxFileName","lineNumber","columnNumber","answers","answerObj","index","key","Object","keys","value","onChange","style","color","_c","$RefreshReg$"],"sources":["/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport styles from \"./QuestionDetails.module.css\";\n\nexport default function QuestionDetails() {\n  const [checked, setChecked] = useState(false);\n  const { year, type } = useParams();\n  const filteredYear = data.find((yearData) => yearData.year === year);\n  const filteredType = filteredYear\n    ? filteredYear.data.find((typeData) => typeData.type === type)\n    : null;\n  const questions = filteredType ? filteredType.data : [];\n\n  const handleChange = (questionId, answerKey) => {\n    setChecked((prevState) => ({ ...prevState, [questionId]: answerKey }));\n  };\n\n  const checkAnswer = (question) => {\n    const selectedAnswer = checked[question.id];\n    return selectedAnswer === question.correctAnswer;\n  };\n\n  return (\n    <div>\n      <ol>\n        {questions.map((question) => (\n          <li key={question.id}>\n            <h3>{question.question}</h3>\n            {question.answers.map((answerObj, index) => {\n              const key = Object.keys(answerObj)[0];\n              const value = answerObj[key];\n              return (\n                <label key={index}>\n                  <input\n                    type=\"checkbox\"\n                    checked={checked[question.id] === key}\n                    onChange={() => handleChange(question.id, key)}\n                  />\n                  {value}\n                </label>\n              );\n            })}\n            <p>\n              {checked[question.id] &&\n                (checkAnswer(question) ? (\n                  <span style={{ color: \"green\" }}>Răspuns corect!</span>\n                ) : (\n                  <span style={{ color: \"red\" }}>Răspuns greșit!</span>\n                ))}\n            </p>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}