{"ast":null,"code":"var _jsxFileName = \"/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport styles from \"./QuestionDetails.module.css\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails() {\n  _s();\n  const [checkedAnswers, setCheckedAnswers] = useState({});\n  const {\n    year,\n    type\n  } = useParams();\n  const filteredYear = data.find(yearData => yearData.year === year);\n  const filteredType = filteredYear ? filteredYear.data.find(typeData => typeData.type === type) : null;\n  const questions = filteredType ? filteredType.data : [];\n  const onChange = (questionId, answerIndex, isCorrect, checked) => {\n    setCheckedAnswers(prevCheckedAnswers => {\n      if (checked) {\n        return {\n          ...prevCheckedAnswers,\n          [questionId]: {\n            ...prevCheckedAnswers[questionId],\n            [answerIndex]: isCorrect\n          }\n        };\n      } else {\n        const updatedQuestionAnswers = {\n          ...prevCheckedAnswers[questionId]\n        };\n        delete updatedQuestionAnswers[answerIndex];\n        if (Object.keys(updatedQuestionAnswers).length === 0) {\n          const {\n            [questionId]: _,\n            ...rest\n          } = prevCheckedAnswers;\n          return rest;\n        }\n        return {\n          ...prevCheckedAnswers,\n          [questionId]: updatedQuestionAnswers\n        };\n      }\n    });\n  };\n  const streakCounter = check => {\n    if (check) {\n      Notiflix.suc;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: questions.map(question => {\n      const answers = question.answers;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.question,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          type: \"A\",\n          className: styles.answersList,\n          children: answers.map((answer, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.answersListItem,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => onChange(question.id, key, answer.isCorrect, e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: checkedAnswers[question.id] && checkedAnswers[question.id][key] !== undefined ? checkedAnswers[question.id][key] ? styles.correct : `${styles.wrong} ${styles.shake}` : \"\",\n                children: answer.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetails, \"6JuYs9bjU42mzxXXPWGhzP0DMqk=\", false, function () {\n  return [useParams];\n});\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useState","useParams","data","styles","Notify","jsxDEV","_jsxDEV","QuestionDetails","_s","checkedAnswers","setCheckedAnswers","year","type","filteredYear","find","yearData","filteredType","typeData","questions","onChange","questionId","answerIndex","isCorrect","checked","prevCheckedAnswers","updatedQuestionAnswers","Object","keys","length","_","rest","streakCounter","check","Notiflix","suc","children","map","question","answers","className","fileName","_jsxFileName","lineNumber","columnNumber","answersList","answer","key","answersListItem","e","id","target","undefined","correct","wrong","shake","_c","$RefreshReg$"],"sources":["/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport styles from \"./QuestionDetails.module.css\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nexport default function QuestionDetails() {\n  const [checkedAnswers, setCheckedAnswers] = useState({});\n  const { year, type } = useParams();\n  const filteredYear = data.find((yearData) => yearData.year === year);\n  const filteredType = filteredYear\n    ? filteredYear.data.find((typeData) => typeData.type === type)\n    : null;\n  const questions = filteredType ? filteredType.data : [];\n\n  const onChange = (questionId, answerIndex, isCorrect, checked) => {\n    setCheckedAnswers((prevCheckedAnswers) => {\n      if (checked) {\n        return {\n          ...prevCheckedAnswers,\n          [questionId]: {\n            ...prevCheckedAnswers[questionId],\n            [answerIndex]: isCorrect,\n          },\n        };\n      } else {\n        const updatedQuestionAnswers = { ...prevCheckedAnswers[questionId] };\n        delete updatedQuestionAnswers[answerIndex];\n        if (Object.keys(updatedQuestionAnswers).length === 0) {\n          const { [questionId]: _, ...rest } = prevCheckedAnswers;\n          return rest;\n        }\n        return {\n          ...prevCheckedAnswers,\n          [questionId]: updatedQuestionAnswers,\n        };\n      }\n    });\n  };\n\n  const streakCounter = (check) => {\n    if (check) {\n      Notiflix.suc;\n    }\n  };\n\n  return (\n    <ol>\n      {questions.map((question) => {\n        const answers = question.answers;\n        return (\n          <li key={question.id}>\n            <h3 className={styles.question}>{question.question}</h3>\n            <ol type=\"A\" className={styles.answersList}>\n              {answers.map((answer, key) => (\n                <li key={key}>\n                  <label className={styles.answersListItem}>\n                    <input\n                      type=\"checkbox\"\n                      onChange={(e) =>\n                        onChange(\n                          question.id,\n                          key,\n                          answer.isCorrect,\n                          e.target.checked\n                        )\n                      }\n                    />\n                    <p\n                      className={\n                        checkedAnswers[question.id] &&\n                        checkedAnswers[question.id][key] !== undefined\n                          ? checkedAnswers[question.id][key]\n                            ? styles.correct\n                            : `${styles.wrong} ${styles.shake}`\n                          : \"\"\n                      }\n                    >\n                      {answer.answer}\n                    </p>\n                  </label>\n                </li>\n              ))}\n            </ol>\n          </li>\n        );\n      })}\n    </ol>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}