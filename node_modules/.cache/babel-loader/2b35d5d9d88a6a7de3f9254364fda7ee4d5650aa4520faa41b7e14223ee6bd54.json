{"ast":null,"code":"var _jsxFileName = \"/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails() {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const {\n    year,\n    type\n  } = useParams();\n  const filteredYear = data.find(yearData => yearData.year === year);\n  const filteredType = filteredYear ? filteredYear.data.find(typeData => typeData.type === type) : null;\n  const questions = filteredType ? filteredType.data : [];\n  const handleChange = () => {\n    setChecked(!checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: questions.map(question => {\n      const answersArray = Object.entries(question.answers);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), answersArray.map(([key, value]) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this))]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetails, \"PJYS/vzQjXhr6KrtlLBr+Z1yX30=\", false, function () {\n  return [useParams];\n});\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useState","useParams","data","jsxDEV","_jsxDEV","QuestionDetails","_s","checked","setChecked","year","type","filteredYear","find","yearData","filteredType","typeData","questions","handleChange","children","map","question","answersArray","Object","entries","answers","fileName","_jsxFileName","lineNumber","columnNumber","key","value","onChange","id","_c","$RefreshReg$"],"sources":["/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\n\nexport default function QuestionDetails() {\n  const [checked, setChecked] = useState(false);\n  const { year, type } = useParams();\n  const filteredYear = data.find((yearData) => yearData.year === year);\n  const filteredType = filteredYear\n    ? filteredYear.data.find((typeData) => typeData.type === type)\n    : null;\n  const questions = filteredType ? filteredType.data : [];\n\n  const handleChange = () => {\n    setChecked(!checked);\n  };\n\n  return (\n    <ol>\n      {questions.map((question) => {\n        const answersArray = Object.entries(question.answers);\n        return (\n          <li key={question.id}>\n            <h3>{question.question}</h3>\n            {answersArray.map(([key, value]) => (\n              <label key={key}>\n                <input type=\"checkbox\" onChange={handleChange} />\n                {value}\n              </label>\n            ))}\n          </li>\n        );\n      })}\n    </ol>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAES,IAAI;IAAEC;EAAK,CAAC,GAAGT,SAAS,CAAC,CAAC;EAClC,MAAMU,YAAY,GAAGT,IAAI,CAACU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACJ,IAAI,KAAKA,IAAI,CAAC;EACpE,MAAMK,YAAY,GAAGH,YAAY,GAC7BA,YAAY,CAACT,IAAI,CAACU,IAAI,CAAEG,QAAQ,IAAKA,QAAQ,CAACL,IAAI,KAAKA,IAAI,CAAC,GAC5D,IAAI;EACR,MAAMM,SAAS,GAAGF,YAAY,GAAGA,YAAY,CAACZ,IAAI,GAAG,EAAE;EAEvD,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzBT,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,oBACEH,OAAA;IAAAc,QAAA,EACGF,SAAS,CAACG,GAAG,CAAEC,QAAQ,IAAK;MAC3B,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACH,QAAQ,CAACI,OAAO,CAAC;MACrD,oBACEpB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAKE,QAAQ,CAACA;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC3BP,YAAY,CAACF,GAAG,CAAC,CAAC,CAACU,GAAG,EAAEC,KAAK,CAAC,kBAC7B1B,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAOM,IAAI,EAAC,UAAU;YAACqB,QAAQ,EAAEd;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAChDE,KAAK;QAAA,GAFID,GAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGR,CACR,CAAC;MAAA,GAPKR,QAAQ,CAACY,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQhB,CAAC;IAET,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACtB,EAAA,CA/BuBD,eAAe;EAAA,QAEdJ,SAAS;AAAA;AAAAgC,EAAA,GAFV5B,eAAe;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}