{"ast":null,"code":"var _jsxFileName = \"/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails() {\n  _s();\n  const {\n    year,\n    type\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: data === null || data === void 0 ? void 0 : data.map(questionYear => {\n      if (questionYear.year === year) {\n        return questionYear.data.filter(question => question.type === type).map(filteredQuestion => {\n          /*#__PURE__*/_jsxDEV(\"li\", {}, filteredQuestion.data, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetails, \"9butgnSt6OTJ0AsVmYq0CN/K1aU=\", false, function () {\n  return [useParams];\n});\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useParams","data","jsxDEV","_jsxDEV","QuestionDetails","_s","year","type","children","map","questionYear","filter","question","filteredQuestion","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andreisorin/Desktop/Projects/Exam-practice-app/src/components/QuestionType/QuestionDetails/QuestionDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport data from \"../../../db/db.json\";\n\nexport default function QuestionDetails() {\n  const { year, type } = useParams();\n  return (\n    <ol>\n      {data?.map((questionYear) => {\n        if (questionYear.year === year) {\n          return questionYear.data\n            .filter((question) => question.type === type)\n            .map((filteredQuestion) => {\n              <li key={filteredQuestion.data}></li>;\n            });\n        }\n      })}\n    </ol>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAClC,oBACEG,OAAA;IAAAK,QAAA,EACGP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,GAAG,CAAEC,YAAY,IAAK;MAC3B,IAAIA,YAAY,CAACJ,IAAI,KAAKA,IAAI,EAAE;QAC9B,OAAOI,YAAY,CAACT,IAAI,CACrBU,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACL,IAAI,KAAKA,IAAI,CAAC,CAC5CE,GAAG,CAAEI,gBAAgB,IAAK;UACzB,aAAAV,OAAA,WAASU,gBAAgB,CAACZ,IAAI;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QACvC,CAAC,CAAC;MACN;IACF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACZ,EAAA,CAfuBD,eAAe;EAAA,QACdJ,SAAS;AAAA;AAAAkB,EAAA,GADVd,eAAe;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}